<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Thilanka Liyanaarachchi</title>
    <link>https://thilankal.github.io/</link>
    <description>Recent content on Thilanka Liyanaarachchi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Jan 2024 20:28:21 +0530</lastBuildDate><atom:link href="https://thilankal.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>List vs Collections vs Iterable</title>
      <link>https://thilankal.github.io/blog/java/collections-vs-iterable/</link>
      <pubDate>Mon, 22 Jan 2024 20:28:21 +0530</pubDate>
      
      <guid>https://thilankal.github.io/blog/java/collections-vs-iterable/</guid>
      <description>Quick tips Do I care about the sequence of the items? If yes use List else a Collection Do I care about how many items? If yes use Collection else use Iterable </description>
    </item>
    
    <item>
      <title>Pod Resource Utilization</title>
      <link>https://thilankal.github.io/blog/kubernates/pod-resource-utilization/</link>
      <pubDate>Sun, 21 Jan 2024 14:03:56 +0530</pubDate>
      
      <guid>https://thilankal.github.io/blog/kubernates/pod-resource-utilization/</guid>
      <description>Getting pod memory First get into the pod using kubectl exec
1 cat /sys/fs/cgroup/memory/memory.usage_in_bytes | awk &amp;#39;{ foo = $1 / 1024 / 1024 ; print foo &amp;#34;MB&amp;#34; }&amp;#39; </description>
    </item>
    
    <item>
      <title>IntelliJ debugging in Docker container</title>
      <link>https://thilankal.github.io/blog/java/intellij-docker-debug/intellij-docker-debug/</link>
      <pubDate>Fri, 19 Jan 2024 15:52:40 +0530</pubDate>
      
      <guid>https://thilankal.github.io/blog/java/intellij-docker-debug/intellij-docker-debug/</guid>
      <description>Scenario So here&amp;rsquo;s the deal. You have a Java application working fine in your local environemnt but whenever it get launched in a container, it crashes. So now you want to debug the app running in the container.
Requirements IntelliJ IDEA 2023.3.2 (Community Edition) Docker Now in the IntelliJ run configurations add remote
Let&amp;rsquo;s run the app in question with following flags:
1 docker run --rm -it -p 5005:5005 -e JAVA_TOOL_OPTIONS=&amp;#34;-agentlib:jdwp=transport=dt_socket,address=*:5005,server=y,suspend=n&amp;#34; my-image:0.</description>
    </item>
    
    <item>
      <title>Odin Language - Installing on macOS Ventura</title>
      <link>https://thilankal.github.io/blog/odin/install-on-mac/</link>
      <pubDate>Thu, 18 Jan 2024 23:50:07 +0530</pubDate>
      
      <guid>https://thilankal.github.io/blog/odin/install-on-mac/</guid>
      <description>I just followed the official documentation :) But setting LLVM_CONFIG was not documented
1 2 3 4 5 6 7 8 9 10 11 xcode-select --install brew install llvm@14 echo &amp;#39;export PATH=&amp;#34;/usr/local/opt/llvm/bin:$PATH&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.zshrc_profile export LDFLAGS=&amp;#34;-L/opt/homebrew/opt/llvm@14/lib&amp;#34; export CPPFLAGS=&amp;#34;-I/opt/homebrew/opt/llvm@14/include&amp;#34; export LLVM_CONFIG=&amp;#34;/opt/homebrew/opt/llvm@14/bin/llvm-config </description>
    </item>
    
    <item>
      <title>Streams</title>
      <link>https://thilankal.github.io/blog/java/streams/</link>
      <pubDate>Sat, 06 Jan 2024 23:53:19 +0530</pubDate>
      
      <guid>https://thilankal.github.io/blog/java/streams/</guid>
      <description>map vs flatMap map is a one-to-one function map(f1t1) =&amp;gt; Stream&amp;lt;R&amp;gt; flatMap is a one-to-many function map(f1tn) =&amp;gt; Stream&amp;lt;List&amp;lt;R&amp;gt;&amp;gt; </description>
    </item>
    
    <item>
      <title>Completable Futures - thenApply vs thenCompose</title>
      <link>https://thilankal.github.io/blog/java/completable-futures/then-compose/</link>
      <pubDate>Sat, 06 Jan 2024 23:14:07 +0530</pubDate>
      
      <guid>https://thilankal.github.io/blog/java/completable-futures/then-compose/</guid>
      <description>Let&amp;rsquo;s wrap a blocking operation in a CompletablFuture
1 2 3 4 5 6 7 public static Integer blockingCall(int x) { return x * 2; } public static CompletableFuture&amp;lt;Integer&amp;gt; asyncRunner(int x) { return CompletableFuture.supplyAsync(() -&amp;gt; blockingCall(x)); } Here we chain the outputs so that it prints the aggregated results. But this will print the future not the value (16)
1 2 3 4 5 public static void main(String[] args) { asyncRunner(4) .</description>
    </item>
    
    <item>
      <title>Tf Idf Jupyter Notebook</title>
      <link>https://thilankal.github.io/blog/ml/tf-idf-jupyter-notebook/</link>
      <pubDate>Fri, 24 Mar 2023 23:57:15 +0530</pubDate>
      
      <guid>https://thilankal.github.io/blog/ml/tf-idf-jupyter-notebook/</guid>
      <description>Installing and running Jupyter notebook 1 2 3 pip install jupyter python jupyter notebook Install ML libraries 1 2 3 4 pip install -U scikit-learn pip install -U spaCy pip install -U pandas pip install gensim </description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://thilankal.github.io/about/</link>
      <pubDate>Fri, 24 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://thilankal.github.io/about/</guid>
      <description>Welcome to my personal website! My name is Thilanka Liyanaarachchi, and I am a Senior Tech Lead based in Sri Lanka. With over 8 years of experience in the industry, I have honed my skills in Java, Scala, and backend development. Additionally, I have experience in frontend development with SvelteJS and Angular, and I am passionate about exploring new technologies to enhance my skill set.
I also have expertise in DevOps, with experience working with AWS, GitLab, Kubernetes, and Terraform.</description>
    </item>
    
    <item>
      <title>Sine wave generator using Golang</title>
      <link>https://thilankal.github.io/blog/golang/sine-wave-generator/</link>
      <pubDate>Wed, 22 Mar 2023 10:55:38 +0530</pubDate>
      
      <guid>https://thilankal.github.io/blog/golang/sine-wave-generator/</guid>
      <description>Let&amp;rsquo;s build a continuous sine wave generator with Go. This could be the first step into creating your ground breaking synthesizer, who knows :) But some theory first before we dive in.
How digital audio works We know that sound waves are vibrations travelling through air. These vibrations cause air pressure changes from sound source (Generator in our case) to receiver (our ears) over time. It is important to note that air particles do not travel with vibrations to receiver.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://thilankal.github.io/_blog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thilankal.github.io/_blog/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>https://thilankal.github.io/blog/music/production_course/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://thilankal.github.io/blog/music/production_course/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
